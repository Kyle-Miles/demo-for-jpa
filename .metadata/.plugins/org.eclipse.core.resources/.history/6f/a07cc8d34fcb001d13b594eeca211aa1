package com.example.demo.model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;

import com.example.demo.util.MainEnum;
import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Getter;
import lombok.Setter;

@Entity
@Getter
@Setter
public class Main {
	
	@Id
	@GeneratedValue (strategy = GenerationType.AUTO)
	private Long mainId;
	
	private String mainString;
	
	private int mainInt;
	
	private boolean isMain;
	
	@Enumerated(EnumType.STRING)
	private MainEnum demoMain;
	
	@ManyToMany
	@JoinTable(name = "main_to_many",
	joinColumns = @JoinColumn(
			name = "main_id"),
	inverseJoinColumns = {@JoinColumn(
			name = "many_id")})
	@JsonIgnore // this ignores the json for test fields so it doesn't combine results in swagger or postman, 
	//this is fine for testing but you may want to consider commenting @JsonIgnore out if you want to make use of the join table in swagger
	//this also applies to line 54 but that is for a foreign key reference example_id inside the demo table 
	private Set<Many> many = new HashSet<>();
	
	@ManyToOne
	@JoinColumn(name= "one_id")
	@JsonIgnore // see the above comments starting on line 47 to line 49
	private One one;

}
